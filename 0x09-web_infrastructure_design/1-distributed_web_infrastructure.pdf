Assign IP Addresses:

Each server, including the database server, should have a unique IP address. For example:
Server 1 (Nginx): 192.168.1.2
Server 2 (Application Server): 192.168.1.3
Database Server (MySQL): 192.168.1.4
Ensure Network Connectivity:

Make sure all servers are on the same network or are reachable from each other.
Configure the Load Balancer (HAproxy):

HAproxy should be set up to distribute incoming traffic to both the Nginx and Application servers.
Use the IP addresses of these servers in the HAproxy configuration.
Software Configuration
Nginx Server Setup:

Configure Nginx to handle incoming requests and possibly to reverse proxy requests to the Application Server.
Set up proxy settings in Nginx to redirect to the Application Server’s IP (192.168.1.3).
Application Server Configuration:

Configure your application server's software to connect to the Database Server.
Set the Database Server's IP address (192.168.1.4) in your application's database configuration.
Database Server Configuration:

Configure MySQL to accept connections from the Application Server's IP address.
Modify MySQL settings (e.g., bind-address in my.cnf) and set appropriate user privileges.
Security Configuration
Firewalls:

Implement firewalls on each server.
Configure them to allow traffic specific to each server’s role (e.g., HTTP/HTTPS for Nginx, database connections for MySQL).
Secure Connections:

Use encrypted connections for sensitive operations, especially database interactions.
Testing the Configuration
Load Balancer Testing:

Test by making web requests to your HAproxy IP and ensure they are correctly processed by your servers.
Database Connectivity:

Verify that your Application Server can successfully connect and interact with the Database Server.
Overall Functionality:

Ensure that each part of the infrastructure works as intended, including the load distribution by HAproxy.
